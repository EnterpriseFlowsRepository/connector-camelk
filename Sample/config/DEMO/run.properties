# Base path for REST services
camel.rest.context-path=Evenements/1
quarkus.application.name=api-evenements

# log
quarkus.log.category."TransformToJson".level=INFO
quarkus.log.category."com.azure".level=WARN

# HTTP Access logs
quarkus.http.access-log.enabled=true
quarkus.http.access-log.pattern=%{REMOTE_IP} %{REMOTE_USER} "%{REQUEST_LINE}" %{RESPONSE_CODE} %{RESPONSE_TIME} %{BYTES_SENT}

# path where to find resources in the container
api.resources=file:/etc/camel/resources/

# trace 
publishEvenement.trace=false
publishEvenements.trace=false

# For OTLP
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector.default:4317
quarkus.opentelemetry.tracer.enabled=true

# ServiceBus
azure.servicebus.cs=Endpoint=sb://neotoa-servicebus-recette.servicebus.windows.net/;SharedAccessKeyName=CamelK;SharedAccessKey=UQ9p4kdvcYWy2wlltcftdm0UbCRQDgV8bYbXg24B8Dg=
# AMQP ?amqp.idleTimeout=120000&jms.connectTimeout=10000
# quarkus.qpid-jms.url = amqps://neotoa-servicebus-recette.servicebus.windows.net/?replyToType=Exclusive&amqp.idleTimeout=120000
# quarkus.qpid-jms.username = CamelK
# quarkus.qpid-jms.password = UQ9p4kdvcYWy2wlltcftdm0UbCRQDgV8bYbXg24B8Dg=

messaging.topic.dynamic=azure-servicebus:evenements.${exchangeProperty.eventType.toLowerCase()}?exchangePattern=InOut&serviceBusType=topic&connectionString=${azure.servicebus.cs}
#messaging.topic.dynamic=amqp:topic:evenements.${exchangeProperty.eventType.toLowerCase()}?exchangePattern=InOut

# for trace
messaging.queue.traces-traces=azure-servicebus:traces.traces?exchangePattern=InOut&serviceBusType=queue&connectionString=${azure.servicebus.cs}
messaging.queue.traces-errors=azure-servicebus:traces.errors?exchangePattern=InOut&serviceBusType=queue&connectionString=${azure.servicebus.cs}
# for errors
messaging.exceptions.exception=azure-servicebus:exceptions.exceptions?exchangePattern=InOut&serviceBusType=queue&connectionString=${azure.servicebus.cs}
# messaging.queue.traces-traces=amqp:queue:traces.traces?exchangePattern=InOut
# messaging.queue.traces-errors=amqp:queue:traces.errors?exchangePattern=InOut
# # for errors
# messaging.exceptions.exception=amqp:queue:exceptions.exceptions?exchangePattern=InOut


# Traces
environment=recette
route.name=${quarkus.application.name}
route.version=1.0.0
route.datacenter=Recette-Aks-CamelK

# Business values
traces.type.business=Business
traces.type.technical=Technical
traces.business=Equipement=eventId
# Error codes
traces.errors.HTTP-403.regex=HTTP operation failed invoking .* with statusCode: 403
traces.errors.HTTP-403.type=${traces.type.technical}
